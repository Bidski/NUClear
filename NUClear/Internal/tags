!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Chronometer	.\Chronometer.h	/^            Chronometer();$/;"	p	class:NUClear::Internal::Chronometer	access:public	signature:()
Chronometer	.\Chronometer.h	/^    class Chronometer {$/;"	c	namespace:NUClear::Internal
Chronometer	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Chronometer() : $/;"	f	class:NUClear::NUClear::Internal::Chronometer	signature:()
Every	.\Chronometer.h	/^    class Every {};$/;"	c	namespace:NUClear::Internal
Implementation	.\Chronometer.h	/^                Implementation(Chronometer* parent);$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:(Chronometer* parent)
Implementation	.\Chronometer.h	/^        class Implementation {$/;"	c	class:NUClear::Internal::Chronometer	access:private
Implementation	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Implementation::Implementation(Chronometer* parent) :$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:(Chronometer* parent)
Internal	.\Chronometer.h	/^namespace Internal {$/;"	n	namespace:NUClear
Internal	.\Reaction.cpp	/^namespace Internal {$/;"	n	namespace:NUClear	file:
Internal	.\Reaction.h	/^namespace Internal {$/;"	n	namespace:NUClear
NUCLEAR_CHRONOMETER_H	.\Chronometer.h	2;"	d
NUCLEAR_REACTION_H	.\Reaction.h	2;"	d
NUClear	.\Chronometer.h	/^namespace NUClear {$/;"	n
NUClear	.\Reaction.cpp	/^namespace NUClear {$/;"	n	file:
NUClear	.\Reaction.h	/^namespace NUClear {$/;"	n
NUClear::Internal	.\Chronometer.h	/^namespace Internal {$/;"	n	namespace:NUClear
NUClear::Internal	.\Reaction.cpp	/^namespace Internal {$/;"	n	namespace:NUClear	file:
NUClear::Internal	.\Reaction.h	/^namespace Internal {$/;"	n	namespace:NUClear
NUClear::Internal::Chronometer	.\Chronometer.h	/^    class Chronometer {$/;"	c	namespace:NUClear::Internal
NUClear::Internal::Chronometer::Chronometer	.\Chronometer.h	/^            Chronometer();$/;"	p	class:NUClear::Internal::Chronometer	access:public	signature:()
NUClear::Internal::Chronometer::Implementation	.\Chronometer.h	/^        class Implementation {$/;"	c	class:NUClear::Internal::Chronometer	access:private
NUClear::Internal::Chronometer::Implementation::Implementation	.\Chronometer.h	/^                Implementation(Chronometer* parent);$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:(Chronometer* parent)
NUClear::Internal::Chronometer::Implementation::Step	.\Chronometer.h	/^                struct Step {$/;"	s	class:NUClear::Internal::Chronometer::Implementation	access:private
NUClear::Internal::Chronometer::Implementation::Step::callbacks	.\Chronometer.h	/^                    std::vector<std::function<void ()>> callbacks;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
NUClear::Internal::Chronometer::Implementation::Step::next	.\Chronometer.h	/^                    std::chrono::nanoseconds next;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
NUClear::Internal::Chronometer::Implementation::Step::step	.\Chronometer.h	/^                    std::chrono::nanoseconds step;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
NUClear::Internal::Chronometer::Implementation::add	.\Chronometer.h	/^                void add();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
NUClear::Internal::Chronometer::Implementation::execute	.\Chronometer.h	/^                bool execute;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
NUClear::Internal::Chronometer::Implementation::loaded	.\Chronometer.h	/^                std::set<std::type_index> loaded;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
NUClear::Internal::Chronometer::Implementation::parent	.\Chronometer.h	/^                Chronometer* parent;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
NUClear::Internal::Chronometer::Implementation::run	.\Chronometer.h	/^                void run();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
NUClear::Internal::Chronometer::Implementation::steps	.\Chronometer.h	/^                std::vector<std::unique_ptr<Step>> steps;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
NUClear::Internal::Chronometer::Implementation::~Implementation	.\Chronometer.h	/^                ~Implementation();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
NUClear::Internal::Chronometer::chronometer	.\Chronometer.h	/^            Implementation chronometer;$/;"	m	class:NUClear::Internal::Chronometer	access:public
NUClear::Internal::Every	.\Chronometer.h	/^    class Every {};$/;"	c	namespace:NUClear::Internal
NUClear::Internal::Reaction	.\Reaction.h	/^    class Reaction {$/;"	c	namespace:NUClear::Internal
NUClear::Internal::Reaction::Reaction	.\Reaction.cpp	/^    Reaction::Reaction(std::function<void ()> callback) :$/;"	f	class:NUClear::Internal::Reaction	signature:(std::function<void ()> callback)
NUClear::Internal::Reaction::Reaction	.\Reaction.h	/^            Reaction(std::function<void ()> callback);$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:(std::function<void ()> callback)
NUClear::Internal::Reaction::m_averageRuntime	.\Reaction.h	/^            std::chrono::nanoseconds m_averageRuntime;$/;"	m	class:NUClear::Internal::Reaction	access:private
NUClear::Internal::Reaction::m_callback	.\Reaction.h	/^            std::function<void ()> m_callback;$/;"	m	class:NUClear::Internal::Reaction	access:private
NUClear::Internal::Reaction::m_invocations	.\Reaction.h	/^            std::uint64_t m_invocations;$/;"	m	class:NUClear::Internal::Reaction	access:private
NUClear::Internal::Reaction::m_reactionId	.\Reaction.h	/^            reactionId_t m_reactionId;$/;"	m	class:NUClear::Internal::Reaction	access:private
NUClear::Internal::Reaction::operator ()	.\Reaction.cpp	/^    void Reaction::operator()() {$/;"	f	class:NUClear::Internal::Reaction	signature:()
NUClear::Internal::Reaction::operator ()	.\Reaction.h	/^            void operator()();$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:()
NUClear::Internal::Reaction::reactionIdSource	.\Reaction.h	/^            static std::atomic<std::uint64_t> reactionIdSource;$/;"	m	class:NUClear::Internal::Reaction	access:private
NUClear::Internal::Reaction::~Reaction	.\Reaction.cpp	/^    Reaction::~Reaction() {}$/;"	f	class:NUClear::Internal::Reaction	signature:()
NUClear::Internal::Reaction::~Reaction	.\Reaction.h	/^            ~Reaction();$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:()
NUClear::Internal::reactionId_t	.\Reaction.h	/^    typedef std::uint64_t reactionId_t;$/;"	t	namespace:NUClear::Internal
NUClear::NUClear::Internal::Chronometer::Chronometer	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Chronometer() : $/;"	f	class:NUClear::NUClear::Internal::Chronometer	signature:()
NUClear::NUClear::Internal::Chronometer::Implementation::Implementation	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Implementation::Implementation(Chronometer* parent) :$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:(Chronometer* parent)
NUClear::NUClear::Internal::Chronometer::Implementation::add	.\Chronometer.h	/^void NUClear::Internal::Chronometer<TChild>::Implementation::add() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
NUClear::NUClear::Internal::Chronometer::Implementation::run	.\Chronometer.h	/^void NUClear::Internal::Chronometer<TChild>::Implementation::run() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
NUClear::NUClear::Internal::Chronometer::Implementation::~Implementation	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Implementation::~Implementation() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
Reaction	.\Reaction.cpp	/^    Reaction::Reaction(std::function<void ()> callback) :$/;"	f	class:NUClear::Internal::Reaction	signature:(std::function<void ()> callback)
Reaction	.\Reaction.h	/^            Reaction(std::function<void ()> callback);$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:(std::function<void ()> callback)
Reaction	.\Reaction.h	/^    class Reaction {$/;"	c	namespace:NUClear::Internal
Step	.\Chronometer.h	/^                struct Step {$/;"	s	class:NUClear::Internal::Chronometer::Implementation	access:private
add	.\Chronometer.h	/^                void add();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
add	.\Chronometer.h	/^void NUClear::Internal::Chronometer<TChild>::Implementation::add() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
callbacks	.\Chronometer.h	/^                    std::vector<std::function<void ()>> callbacks;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
chronometer	.\Chronometer.h	/^            Implementation chronometer;$/;"	m	class:NUClear::Internal::Chronometer	access:public
execute	.\Chronometer.h	/^                bool execute;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
loaded	.\Chronometer.h	/^                std::set<std::type_index> loaded;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
m_averageRuntime	.\Reaction.h	/^            std::chrono::nanoseconds m_averageRuntime;$/;"	m	class:NUClear::Internal::Reaction	access:private
m_callback	.\Reaction.h	/^            std::function<void ()> m_callback;$/;"	m	class:NUClear::Internal::Reaction	access:private
m_invocations	.\Reaction.h	/^            std::uint64_t m_invocations;$/;"	m	class:NUClear::Internal::Reaction	access:private
m_reactionId	.\Reaction.h	/^            reactionId_t m_reactionId;$/;"	m	class:NUClear::Internal::Reaction	access:private
next	.\Chronometer.h	/^                    std::chrono::nanoseconds next;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
operator ()	.\Reaction.cpp	/^    void Reaction::operator()() {$/;"	f	class:NUClear::Internal::Reaction	signature:()
operator ()	.\Reaction.h	/^            void operator()();$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:()
parent	.\Chronometer.h	/^                Chronometer* parent;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
reactionIdSource	.\Reaction.h	/^            static std::atomic<std::uint64_t> reactionIdSource;$/;"	m	class:NUClear::Internal::Reaction	access:private
reactionId_t	.\Reaction.h	/^    typedef std::uint64_t reactionId_t;$/;"	t	namespace:NUClear::Internal
run	.\Chronometer.h	/^                void run();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
run	.\Chronometer.h	/^void NUClear::Internal::Chronometer<TChild>::Implementation::run() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
step	.\Chronometer.h	/^                    std::chrono::nanoseconds step;$/;"	m	struct:NUClear::Internal::Chronometer::Implementation::Step	access:public
steps	.\Chronometer.h	/^                std::vector<std::unique_ptr<Step>> steps;$/;"	m	class:NUClear::Internal::Chronometer::Implementation	access:private
~Implementation	.\Chronometer.h	/^                ~Implementation();$/;"	p	class:NUClear::Internal::Chronometer::Implementation	access:public	signature:()
~Implementation	.\Chronometer.h	/^NUClear::Internal::Chronometer<TChild>::Implementation::~Implementation() {$/;"	f	class:NUClear::NUClear::Internal::Chronometer::Implementation	signature:()
~Reaction	.\Reaction.cpp	/^    Reaction::~Reaction() {}$/;"	f	class:NUClear::Internal::Reaction	signature:()
~Reaction	.\Reaction.h	/^            ~Reaction();$/;"	p	class:NUClear::Internal::Reaction	access:public	signature:()
